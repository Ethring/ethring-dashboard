stages:
  - test_unit
  - test_ui
  - deploy_reports
  - build_docker
  - deploy
  - test_performance
  - sentry

include:
  - local: "/tests/build/tests-ci.yml"

.dockerBuildJob:
  stage: build_docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  allow_failure: false
  variables:
    IMAGE_TAG: $REGISTRY_URL/$CI_PROJECT_NAME/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA
    HOST: work.3ahtim54r.ru
    NODE_ENV: development
    TX_MANAGER_API: https://zomet-tx-manager.3ahtim54r.ru
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$REGISTRY_URL\":{\"username\":\"$REGISTRY_USER\",\"password\":\"$REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - time /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $IMAGE_TAG
      --cache=true
      --cache-ttl=168h
      --build-arg HOST
      --build-arg RELEASE
      --build-arg SENTRY_DSN
      --build-arg MIXPANEL_TOKEN
      --build-arg CORE_API
      --build-arg PROXY_API
      --build-arg DATA_PROVIDER_API
      --build-arg BRIDGE_DEX_API
      --build-arg WC_PROJECT_ID
      --build-arg KADO_API_KEY
      --build-arg TX_MANAGER_API
      --build-arg NODE_ENV
      --build-arg PORTAL_FI_API
      --build-arg APPS_API

.deployJob:
  stage: deploy
  image: widerin/openshift-cli:latest
  cache: {}
  variables:
    IMAGE_TAG: $REGISTRY_URL/$CI_PROJECT_NAME/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA
    NAME: $CI_PROJECT_NAME
    TEMPLATE: template.yml
    REPLICAS: 1
    PORT: 8080
  before_script:
    - apk add --update coreutils
    - oc login --token $OPENSHIFT_TOKEN $OPENSHIFT_URL --insecure-skip-tls-verify
    - oc project $OPENSHIFT_PROJECT
    - DOCKERCONFIGJSON=$(echo -n "{\"auths\":{\"$DOCKER_REPO\":{\"username\":\"$DOCKER_USER_RO\",\"password\":\"$DOCKER_PASS_RO\"},\"$REGISTRY_URL\":{\"username\":\"$REGISTRY_USER\",\"password\":\"$REGISTRY_PASSWORD\"}}}" | base64 -w 0)
  script:
    - oc process -f deploy/$TEMPLATE
      --ignore-unknown-parameters=true
      -p DC_NAME=$NAME
      -p APP_NAME=$(echo $CI_PROJECT_NAMESPACE | sed -e 's/\//-/g')
      -p IMAGE_NAME=$IMAGE_TAG
      -p NAMESPACE=$OPENSHIFT_PROJECT
      -p AUTH_USER=$BETA_AUTH_USER
      -p AUTH_PASSWORD=$BETA_AUTH_PASSWORD
      -p PORT=$PORT
      -p REPLICAS=$REPLICAS
      -p DOCKERCONFIGJSON=$DOCKERCONFIGJSON | oc apply -f -
    - oc secrets link default auth-docker --for=pull
    - >
      if [[ "$REDEPLOY" == "YES" ]]; then
        oc rollout restart deploy $NAME
      fi
    - oc rollout status deploy $NAME -n $OPENSHIFT_PROJECT

Sentry release:
  stage: sentry
  image: node:14
  only:
    - master
  before_script:
    - export RELEASE_NAME=$(date +'%d.%m.%Y')-$CI_COMMIT_SHORT_SHA
  script:
    - npm ci
    - NODE_ENV=production npm run build
    - npm install @sentry/cli
    - npx sentry-cli releases new $RELEASE_NAME --finalize
    - npx sentry-cli sourcemaps upload --release $RELEASE_NAME ./dist/

Build dev:
  extends: .dockerBuildJob
  needs:
    - "Run tests"
  environment:
    name: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "dev"

Build beta:
  extends: .dockerBuildJob
  environment:
    name: prod
  rules:
    - if: $CI_COMMIT_BRANCH == "beta"

Build branch:
  extends: .dockerBuildJob
  when: manual
  needs: []
  variables:
    IMAGE_TAG: $REGISTRY_URL/$CI_PROJECT_NAME/branches:$CI_COMMIT_REF_SLUG
  environment:
    name: test
  except:
    - dev
    - master
    - schedules
    - beta

Build prod:
  extends: .dockerBuildJob
  #TODO: variables for prod
  variables:
    NODE_ENV: production
  before_script:
    - export RELEASE=$(date +'%d.%m.%Y')-$CI_COMMIT_SHORT_SHA
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

Deploy dev:
  extends: .deployJob
  needs:
    - "Build dev"
  environment:
    name: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "dev"

Deploy beta:
  extends: .deployJob
  variables:
    NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    TEMPLATE: auth-template.yml
  environment:
    name: prod
  rules:
    - if: $CI_COMMIT_BRANCH == "beta"

Deploy branch:
  extends: .deployJob
  needs: ["Build branch"]
  variables:
    NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    REDEPLOY: "YES"
    IMAGE_TAG: $REGISTRY_URL/$CI_PROJECT_NAME/branches:$CI_COMMIT_REF_SLUG
  after_script:
    - oc delete route $NAME --ignore-not-found=true
    - oc create route edge $NAME --service=$NAME --hostname=$NAME.$OPENSHIFT_ROUTE --insecure-policy=Redirect
    - echo "Deployed here - https://$NAME.$OPENSHIFT_ROUTE"
  environment:
    name: test
  except:
    - dev
    - master
    - schedules
    - beta

Deploy prod:
  extends: .deployJob
  environment:
    name: prod
  rules:
    - if: $CI_COMMIT_BRANCH == "prod"
